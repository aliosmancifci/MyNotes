@using Notlarim102.Entity
@model List<Note>

@{
    ViewBag.Title = "Index";
}

<!-- Section-->
<section class="py-5">
    <div class="container px-4 px-lg-5 mt-5">
        <div class="row gx-4 gx-lg-5 row-cols-1 row-cols-md-2 row-cols-xl-3 justify-content-center">
            @{
                int i = 1;
            }
            @foreach (Note note in Model)
            {
                <div class="col mb-5">
                    <div class="card h-100">
                        <!-- Product image-->
                        <img class="card-img-top" src="https://picsum.photos/450/300?random=@i" alt="..." />
                        <!-- Product details-->
                        <div class="card-body px-1 py-4">
                            <div class="text-center">
                                <!-- Product name-->
                                <h5 class="fw-bolder">@note.Title</h5>
                                <div class="d-flex justify-content-between">
                                    <div>
                                        <i class="far fa-user"></i> @note.Owner.Username
                                    </div>
                                    <div>
                                        <i class="far fa-clock"></i> @note.ModifiedOn.ToString("dd.MM.yy HH:mm")
                                    </div>
                                </div>
                                <hr />
                                <p class="card-text">
                                    @if (string.IsNullOrEmpty(note.Text) == false && note.Text.Length > 100)
                                    {
                                        @(note.Text.Substring(0,100)+"...")
                                    }
                                    else
                                    {
                                        @note.Text
                                    }

                                </p>
                            </div>
                        </div>
                        <!-- Product actions-->
                        @*<div class="card-footer p-4 pt-0 border-top-0 bg-transparent">
                                <div class="text-center"><a class="btn btn-outline-dark mt-auto" href="#">View options</a></div>
                            </div>*@
                        <hr />
                        <div class="bg-transparent d-flex justify-content-between">
                            <p>
                                <button type="button" class="btn btn-outline-light text-dark btn-lg">
                                    <i class="bi-star-fill text-danger"></i> @note.LikeCount
                                </button>
                            </p>
                            <p>
<button type="button" class="btn btn-outline-light text-dark btn-lg" data-bs-toggle="modal" data-bs-target="#modal_comment" data-note-id="@note.Id">
                                    <i class="bi bi-chat-left-dots-fill text-danger"></i> Yorumlar
                                </button>
                            </p>

                        </div>
                    </div>
                </div>
                i++;
            }
        </div>
    </div>
</section>

@Bootstrap.ModalPopup("modal_comment","Yorumlar")

<script src="~/Scripts/jquery-3.6.0.min.js"></script>
<script>
    var noteId = -1;
    var modalCommentBodyId = '#modal_comment_body';

    $(function() {
        $('#modal_comment').on('show.bs.modal',
            function(e) {
                var btn = $(e.relatedTarget);
                noteId = btn.data("note-id");
                $(modalCommentBodyId).load("/Comment/ShowNoteComments/" + noteId);
            });
    });
    function doComment(btn, e, commentId, spanId) {
        var button = $(btn);
        var mode = button.data("edit-mode");
        if (e === "edit_clicked") {
            if (!mode) {
                button.data("edit-mode", true);
                button.removeClass("btn-warning");
                button.addClass("btn-success");
                var btnSpan = button.find("span");
                btnSpan.removeClass("bi-pencil");
                btnSpan.addClass("bi-check");

                $(spanId).addClass("editable");
                $(spanId).attr("contenteditable", true);
                $(spanId).focus();
            } else {
                button.data("edit-mode", false);
                button.removeClass("btn-success");
                button.addClass("btn-warning");
                var btnSpan = button.find("span");
                btnSpan.removeClass("bi-check");
                btnSpan.addClass("bi-pencil");

                $(spanId).addClass("editable");
                $(spanId).attr("contenteditable", false);

                var txt = $(spanId).text();

                $.ajax({
                    method: "POST",
                    url: "/Comment/Edit/" + commentId,
                    data: { text: txt }
                }).done(function (data) {
                    if (data.result) {
                        //yorumlari tekrardan yukleyecegim.
                        $(modalCommentBodyId).load("/Comment/ShowNoteComments/" + noteId);
                    } else {
                        alert("Yorum guncellenemedi");
                    }
                }).fail(function () {
                    alert("Sunucu ile baglanti kurulamadi.");
                });
            }
        }
        else if (e === "delete_clicked") {
            var dialog_res = confirm("Yorum silinsin mi?");
            if (!dialog_res) {
                return false;
            }
            $.ajax({
                method: "GET",
                url: "/Comment/Delete/" + commentId
            }).done(function (data) {
                if (data.result) {
                    //yorumlari tekrardan yukleyecegim.
                    $(modalCommentBodyId).load("/Comment/ShowNoteComments/" + noteId);
                } else {
                    alert("Yorum Silinemedi.");
                }
            }).fail(function () {
                alert("Sunucu ile baglanti kurulamadi.");
            });
        }
        else if (e === "new_clicked") {
            var txt = $("#new_comment_text").val();
            $.ajax({
                method: "POST",
                url: "/Comment/Create",
                data: { "text": txt, "noteid": noteId }
            }).done(function (data) {

                if (data.result) {
                    // yorumlar partial tekrar yüklenir..
                    $(modalCommentBodyId).load("/Comment/ShowNoteComments/" + noteId);
                } else {
                    alert("Yorum eklenemedi.");
                }

            }).fail(function () {
                alert("Sunucu ile bağlantı kurulamadı.");
            });
        }
    }
</script>